name: Build, test, scan and deploy pipeline

on:
  workflow_dispatch:
  push:
    branches: [master, feature]
  pull_request: 
    branches: [master, feature]

jobs:
  unit-testing:
    name: Run the Go tests
    runs-on: ubuntu-latest

    services:
      postgres: 
        image: postgres:16
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DB_HOST: localhost
      DB_USER: ${{ secrets.DB_USER }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_PORT: 5432

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Install Go dependencies
        run: go mod tidy

      - name: Run Go Tests
        run: go test -v ./...

  docker-build-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: unit-testing

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3.4.0
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build & Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            nsahil992/cronops:latest
            nsahil992/cronops:sha-${{ github.sha }}

  trivy-scan:
    name: Trivy Docker image Scanning
    runs-on: ubuntu-latest
    needs: docker-build-push

    steps:
      - name: Scan image using Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: nsahil992/cronops:sha-${{ github.sha }}
          format: table
          severity: CRITICAL,HIGH
          exit-code: 0
